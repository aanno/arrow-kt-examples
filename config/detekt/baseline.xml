<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ImportOrdering:InikioCasinoTest.kt$import arrow.core.left import arrow.core.right import io.kotest.core.spec.style.ShouldSpec import io.kotest.matchers.shouldBe import com.github.aanno.arrowkt.FlipCoin.Outcome.* import com.github.aanno.arrowkt.Done.*</ID>
    <ID>MagicNumber:ArrowDetektRules.kt$5</ID>
    <ID>MagicNumber:build.gradle.kts$20</ID>
    <ID>MultiLineIfElse:InikioCasinoTest.kt$InikioCasinoTest$LOSE</ID>
    <ID>MultiLineIfElse:InikioCasinoTest.kt$InikioCasinoTest$WIN</ID>
    <ID>NoConsecutiveBlankLines:ArrowTypedErrorContextReceiver.kt$ </ID>
    <ID>NoMultipleSpaces:ArrowTypedErrorInValue.kt$ArrowTypedErrorInValue$ </ID>
    <ID>NoUnusedImports:ArrowTypedErrorExtensionReceiver.kt$com.github.aanno.arrowkt.ArrowTypedErrorExtensionReceiver.kt</ID>
    <ID>NoUnusedImports:InikioCasinoTest.kt$com.github.aanno.arrowkt.InikioCasinoTest.kt</ID>
    <ID>NoWildcardImports:InikioCasinoTest.kt$import com.github.aanno.arrowkt.Done.*</ID>
    <ID>NoWildcardImports:InikioCasinoTest.kt$import com.github.aanno.arrowkt.FlipCoin.Outcome.*</ID>
    <ID>SpacingAroundColon:InikioCasino.kt$Done$:</ID>
    <ID>SpacingAroundColon:InikioCasino.kt$FlipCoin$:</ID>
    <ID>UnusedPrivateProperty:InikioCasinoTest.kt$InikioCasinoTest$val doubleCoin = casino { val o1 = flipCoin() val o2 = flipCoin() if (o1 == HEADS &amp;&amp; o2 == HEADS) WIN else LOSE }</ID>
    <ID>WildcardImport:InikioCasinoTest.kt$import com.github.aanno.arrowkt.Done.*</ID>
    <ID>WildcardImport:InikioCasinoTest.kt$import com.github.aanno.arrowkt.FlipCoin.Outcome.*</ID>
  </CurrentIssues>
</SmellBaseline>
